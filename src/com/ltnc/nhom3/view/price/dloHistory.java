/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ltnc.nhom3.view.price;

import com.ltnc.nhom3.entity.Price;
import com.ltnc.nhom3.service.PriceService;
import com.ltnc.nhom3.utility.ConstantHelper;
import com.ltnc.nhom3.utility.IOHandler;
import com.ltnc.nhom3.view.product.pnlList;
import com.ltnc.nhom3.view.template.SectionTemplate;
import com.ltnc.nhom3.view.template.TableHelper;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class dloHistory extends javax.swing.JDialog {

    private PriceService priceService;
    private int productId;
    private int totalPage;
    private int pageNum = 1;
    
    /**
     * Creates new form dloPrice
     */
    public dloHistory(java.awt.Frame parent, PriceService priceService, int productId, String productName) {
        super(parent, true);
        initComponents();
        this.priceService = priceService;
        this.productId = productId;
        jScrollPane1.getViewport().setBackground(ConstantHelper.SECTION_PANEL_BG);
        setLocationRelativeTo(parent);
        setTitle(productName);
        getTotalPage();
        loadPriceToTable(1);
    }
    
    private void loadPriceToTable(int pageNum) {
        this.pageNum = pageNum;
        reloadPaginationButtons();
        String[] titles = ConstantHelper.TBL_PRICE_TITLES;
        DefaultTableModel dtm = TableHelper.getNonEditableTableModel(titles);
        List<Price> prices = null;
        try {
            prices = priceService.findAllByProductId(productId, pageNum);
            Object[] row = new Object[titles.length];
            if (prices.isEmpty()) {
                row[1] = ConstantHelper.NO_RESULT_MESSAGE;
                dtm.addRow(row);
            } else {
                for (Price price : prices) {
                    row[0] = price.isCurrent() ? ConstantHelper.DOT_TEXT : "";
                    row[1] = IOHandler.convertToDisplayPriceString(price.getValue());
                    row[2] = IOHandler.convertToDisplayDateTime(price.getStartDate());
                    String endDate = price.getEndDate();
                    row[3] = endDate==null ? ConstantHelper.NO_INFORMATION_MESSAGE : IOHandler.convertToDisplayDateTime(endDate);
                    dtm.addRow(row);
                }
            }
            tbPriceList.setModel(dtm);
            TableHelper.setWidthForAllColumns(tbPriceList, ConstantHelper.TBL_PRICE_WIDTHS);
        } catch (SQLException ex) {
            Logger.getLogger(pnlList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = SectionTemplate.getStyledPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbPriceList = new TableHelper.CustomTable();
        jPanel3 = SectionTemplate.getStyledPanel();
        btnNextPage = SectionTemplate.getStyledButton();
        btnPrevPage = SectionTemplate.getStyledButton();
        btnLastPage = SectionTemplate.getStyledButton();
        btnFirstPage = SectionTemplate.getStyledButton();
        lblPaginationStatus = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Lịch sử đơn giá", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 12))); // NOI18N

        jScrollPane1.setBackground(ConstantHelper.SECTION_PANEL_BG);
        jScrollPane1.setBorder(null);

        tbPriceList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbPriceList);

        btnNextPage.setText("▶");
        btnNextPage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNextPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextPageActionPerformed(evt);
            }
        });

        btnPrevPage.setText("◀");
        btnPrevPage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPrevPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevPageActionPerformed(evt);
            }
        });

        btnLastPage.setText("▶|");
        btnLastPage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnLastPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastPageActionPerformed(evt);
            }
        });

        btnFirstPage.setText("|◀");
        btnFirstPage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnFirstPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFirstPageActionPerformed(evt);
            }
        });

        lblPaginationStatus.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lblPaginationStatus.setText("1/2");
        lblPaginationStatus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFirstPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrevPage)
                .addGap(20, 20, 20)
                .addComponent(lblPaginationStatus)
                .addGap(20, 20, 20)
                .addComponent(btnNextPage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLastPage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblPaginationStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNextPage)
                        .addComponent(btnPrevPage)
                        .addComponent(btnLastPage)
                        .addComponent(btnFirstPage)))
                .addGap(8, 8, 8))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextPageActionPerformed
        loadPriceToTable(++pageNum);
    }//GEN-LAST:event_btnNextPageActionPerformed

    private void btnPrevPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevPageActionPerformed
        loadPriceToTable(--pageNum);
    }//GEN-LAST:event_btnPrevPageActionPerformed

    private void btnLastPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastPageActionPerformed
        pageNum = totalPage;
        loadPriceToTable(pageNum);
    }//GEN-LAST:event_btnLastPageActionPerformed

    private void btnFirstPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFirstPageActionPerformed
        pageNum = 1;
        loadPriceToTable(pageNum);
    }//GEN-LAST:event_btnFirstPageActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFirstPage;
    private javax.swing.JButton btnLastPage;
    private javax.swing.JButton btnNextPage;
    private javax.swing.JButton btnPrevPage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPaginationStatus;
    private javax.swing.JTable tbPriceList;
    // End of variables declaration//GEN-END:variables

    private void getTotalPage() {
        try {
            int totalItems = priceService.countAllByProductId(productId);
            totalPage = totalItems / ConstantHelper.ITEM_PER_PAGE 
                    + (totalItems % ConstantHelper.ITEM_PER_PAGE == 0 ? 0 : 1);
        } catch (SQLException ex) {
            Logger.getLogger(pnlList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void reloadPaginationButtons() {
        btnPrevPage.setEnabled(true);
        btnFirstPage.setEnabled(true);
        btnLastPage.setEnabled(true);
        btnNextPage.setEnabled(true);
        if (pageNum == 1) {
            btnFirstPage.setEnabled(false);
            btnPrevPage.setEnabled(false);
        }
        if (pageNum == totalPage) {
            btnNextPage.setEnabled(false);
            btnLastPage.setEnabled(false);
        }
        lblPaginationStatus.setText(String.format(ConstantHelper.PAGINATION_TEXT, pageNum, totalPage));
    }
}
